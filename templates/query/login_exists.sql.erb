DECLARE
	@login as varchar(255) = '<%= @login %>',
	@is_disabled as tinyint = <%= @disabled ? 1 : 0 %>,
	@check_expiration as tinyint = <%= @check_expiration ? 1 : 0 %>,
	@check_policy as tinyint = <%= @check_policy ? 1 : 0 %>,
	@type_desc as varchar(50) = '<%= @login_type %>',
	@default_db as varchar(255) = '<%= @default_database %>',
	@default_lang as varchar(50) = '<%= @default_language %>'
IF <% if @ensure == 'present' %>NOT<% end %> EXISTS(SELECT name FROM sys.server_principals WHERE  name = '<%= @login %>')
    THROW 51000, 'ERROR: The login is not <%= @ensure %>', 10

<% if @ensure == 'present' %>
BEGIN
IF NOT EXISTS(
    SELECT p.name FROM sys.server_principals p
    LEFT JOIN sys.sql_logins s ON s.name = p.name
    WHERE
	    p.name = @login
	    AND p.type_desc = @type_desc
	    AND p.is_disabled = @is_disabled
	    AND p.default_database_name = @default_db
	    AND p.default_language_name = @default_lang
	  <% if @login_type == 'SQL_LOGIN' %>
	    AND is_policy_checked = @check_policy
	    AND is_expiration_checked = @check_expiration
	  <% end %>
        ) THROW 51000, 'ERROR: The login is not in the correct state', 10
    /* If it does exist check for each role is in the correct state */
    <% @svrroles.each do |role, enable_bit| %>
        IF (SELECT COUNT(me.role_principal_id) from sys.server_role_members me
          JOIN sys.server_principals rol ON me.role_principal_id = rol.principal_id
          JOIN sys.server_principals pri ON me.member_principal_id = pri.principal_id
          WHERE rol.type_desc = 'SERVER_ROLE'
            AND rol.name = '<%= role %>'
            AND pri.name = '<%= @login %>') != <%= enable_bit %>
          THROW 51000, 'ERROR: a role is not correct for <%= role %>', 10
    <% end %>

<% end %>
END

